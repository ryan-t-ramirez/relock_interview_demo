Flow com.me.adaptiveAuthentication
     Basepath ""
flow_userLogin = RRF "auth/userLogin.html" 
// // ---  Risk-Scoring Protocol---
// CONST RISK_THRESHOLD = 100
// FUNCTION analyze(username, request_context):
//   risk_score = 0
//   // 1. Check IP Reputation (High Impact)
//   IF is_ip_blacklisted(request_context.ip_address) 
// THEN
//     risk_score += 90
//   END IF
//   // 2. Check for New Device (High Impact)
//   IF is_new_device_for_user(username, request_context.device_fingerprint) THEN
//     risk_score += 75
//   END IF
//   // 3. Check for Impossible Travel (Critical Impact)
//   IF is_impossible_travel(username, request_context.location) 
// THEN
//     risk_score += 150
//   END IF
//   // 4. Check for Atypical Login Time (Medium Impact)
//   IF is_atypical_login_time(username, request_context.timestamp) 
// THEN
//     risk_score += 30
//   END IF
//   // 5. Final Decision
//   IF risk_score >= RISK_THRESHOLD 
// THEN
//     RETURN "high"
//   ELSE
//     RETURN "low"
//   END IF
flow_riskLevel = Call com.Relock.risk.RiskChecker#analyze flow_userLogin
When flow_riskLevel is high
     flow_password = RRF "auth/password.html" 
     flow_otp = RRF "auth/otp.html" 
     flow_authResult = Call com.Relock.auth.Authenticator#verifyPasswordAndOTP flow_userLogin flow_password flow_otp
     it_afagn = {success:true, data: { userId: flow_userLogin }}
     Finish it_afagn
Otherwise
     flow_password = RRF "auth/password.html" 
     flow_authResult = Call com.Relock.auth.Authenticator#verifyPassword flow_userLogin flow_password
     it_kksvr = {success:true, data: { userId: flow_userLogin }}
     Finish it_kksvr